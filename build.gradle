plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.2'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.sparta'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // spring-web
    implementation 'org.springframework.boot:spring-boot-starter-web'
    // spring-data-jpa
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    // spring-security
    implementation 'org.springframework.boot:spring-boot-starter-security'
    // mysql-connector
    runtimeOnly 'com.mysql:mysql-connector-j'
    // querydsl
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"
    // swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'
    // lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    // validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    // json-web-token
    compileOnly group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.5'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.5'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.5'
    // test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    // mail
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    // redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    // webSocket
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    // env
    implementation 'me.paulschwarz:spring-dotenv:4.0.0'
    // badWord
    implementation 'io.github.vaneproject:badwordfiltering:1.0.0'
    // aws -> s3
    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'
}

tasks.named('test') {
    useJUnitPlatform()
}
// queryDsl
def generated = 'src/main/generated'

tasks.withType(JavaCompile).configureEach {
    options.getGeneratedSourceOutputDirectory().set(file(generated))
}

sourceSets {
    main.java.srcDirs += [ generated ]
}

clean {
    delete file(generated)
}
jar {
    enabled = false
}